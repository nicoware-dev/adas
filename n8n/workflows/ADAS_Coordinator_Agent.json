{
  "name": "ADAS Coordinator Agent",
  "nodes": [
    {
      "parameters": {
        "model": {
          "__rl": true,
          "value": "gpt-4o",
          "mode": "list",
          "cachedResultName": "gpt-4o"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        -100,
        340
      ],
      "id": "64cac879-f620-4d33-a3d1-f8a6eb22ce1c",
      "name": "OpenAI Chat Model",
      "credentials": {
        "openAiApi": {
          "id": "H0v2rnJU6NdyXV9u",
          "name": "OpenAi account MAS"
        }
      }
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "={{ $('Telegram Trigger').item.json.message.chat.id }}"
      },
      "type": "@n8n/n8n-nodes-langchain.memoryBufferWindow",
      "typeVersion": 1.3,
      "position": [
        100,
        340
      ],
      "id": "3a29cc0e-d764-4459-8c7f-142badd27093",
      "name": "Window Buffer Memory"
    },
    {
      "parameters": {
        "updates": [
          "message"
        ],
        "additionalFields": {}
      },
      "id": "f13bb36d-99f9-40ff-ae5d-ac561b1dacea",
      "name": "Telegram Trigger",
      "type": "n8n-nodes-base.telegramTrigger",
      "typeVersion": 1.1,
      "position": [
        -320,
        -80
      ],
      "webhookId": "23a4d4ce-8372-407d-b234-9ae5d6203eb2",
      "credentials": {
        "telegramApi": {
          "id": "w9Z5sBFZFVfXl3ES",
          "name": "ADAS Coordinator Agent Telegram"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "fe7ecc99-e1e8-4a5e-bdd6-6fce9757b234",
              "name": "text",
              "value": "={{ $json.message.text }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "49a05bb2-eec6-4467-968a-07649ceec9ca",
      "name": "Set 'Text'",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        20,
        80
      ]
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.message.voice.file_id }}",
                    "rightValue": "",
                    "operator": {
                      "type": "string",
                      "operation": "exists",
                      "singleValue": true
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Voice"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "8c844924-b2ed-48b0-935c-c66a8fd0c778",
                    "leftValue": "={{ $json.message.text }}",
                    "rightValue": "",
                    "operator": {
                      "type": "string",
                      "operation": "exists",
                      "singleValue": true
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Text"
            }
          ]
        },
        "options": {}
      },
      "id": "0a866a74-f767-45d4-8ff2-9138101eb8e8",
      "name": "Switch",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        -240,
        120
      ]
    },
    {
      "parameters": {
        "chatId": "={{ $('Telegram Trigger').item.json.message.chat.id }}",
        "text": "={{ $json.output }}",
        "additionalFields": {
          "appendAttribution": false
        }
      },
      "id": "4a5ffdec-27da-4ae9-a94b-8eb8d8388fba",
      "name": "Response",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        660,
        80
      ],
      "webhookId": "54d2910a-496e-4399-bcc5-8124381777cc",
      "credentials": {
        "telegramApi": {
          "id": "w9Z5sBFZFVfXl3ES",
          "name": "ADAS Coordinator Agent Telegram"
        }
      }
    },
    {
      "parameters": {
        "resource": "file",
        "fileId": "={{ $json.message.voice.file_id }}"
      },
      "id": "4d45c66d-8d85-42e7-b260-d4914623148e",
      "name": "Download File",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        -60,
        -80
      ],
      "webhookId": "ed9b6f56-05c2-46ab-9f2a-be0a4e9a323f",
      "credentials": {
        "telegramApi": {
          "id": "w9Z5sBFZFVfXl3ES",
          "name": "ADAS Coordinator Agent Telegram"
        }
      }
    },
    {
      "parameters": {
        "resource": "audio",
        "operation": "transcribe",
        "options": {}
      },
      "id": "84705d08-e490-45e2-a3ea-cfcece8cd211",
      "name": "Transcribe",
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.6,
      "position": [
        80,
        -80
      ],
      "credentials": {
        "openAiApi": {
          "id": "H0v2rnJU6NdyXV9u",
          "name": "OpenAi account MAS"
        }
      }
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $json.text }}",
        "options": {
          "systemMessage": "=# ADAS Coordinator Agent System Prompt\n\n## Overview\nYou are the ADAS (Aptos DefAI Agent Swarm) Coordinator Agent, responsible for routing user requests to the appropriate specialized agent on the Aptos blockchain. Your role is to analyze user requests and delegate tasks to the most suitable agent. You do not execute operations directly - you identify and delegate to a single specialized agent. NEVER respond to user queries directly - ALWAYS delegate to ONE appropriate specialized agent.\n\n## Available Agents (Tools)\n\n### analyticsAgent\nThis tool connects to the Analytics Agent that provides comprehensive market data and DeFi analytics for the Aptos ecosystem.\n- Input: Any analytics, metrics, prices, or reporting request for Aptos ecosystem\n- Output: Detailed analytics, market data, and visualizations\n- Example: \"What's the current TVL across all Aptos DeFi protocols?\"\n\n### defiAgent\nThis tool connects to the DeFi Agent that manages all protocol interactions and transactions on Aptos.\n- Input: Any DeFi protocol operation or transaction request\n- Output: Transaction execution, protocol interaction results, or operational status\n- Example: \"Supply 100 APT as collateral on Joule Finance\"\n\n### aptosExpertAgent\nThis tool connects to the Aptos Expert Agent that provides technical expertise and blockchain analysis.\n- Input: Any technical question or analysis request about Aptos ecosystem\n- Output: Technical explanations, code analysis, and best practices\n- Example: \"How do I implement a secure Move module for staking?\"\n\n## Rules\n\n### 1. Single Agent Delegation\n- Each user request should be delegated to exactly ONE agent\n- Choose the most appropriate agent based on the primary intent of the request\n- Do not split requests across multiple agents\n\n### 2. Agent Selection Rules\n- Use analyticsAgent for:\n  - Price and market data requests\n  - TVL and protocol metrics\n  - Market trends and analytics\n  - Get top pools on Aptos\n\n- Use defiAgent for:\n  - Getting the user wallet address and balance.\n  - Fetching the portfolio details\n  - Transfering assets (APT, tokens, NFTs)\n  - Creating tokens and NFTs\n  - Protocol interactions (Joule, Amnis, Thala)\n  - Token swaps and trades\n  - Lending and borrowing\n  - Staking and farming operations\n\n- Use aptosExpertAgent for:\n  - Technical questions about Aptos\n  - Move language queries\n  - Smart contract analysis\n  - Development guidance\n\n### 3. Delegation Process\n1. Analyze user request to identify primary intent\n2. Select ONE appropriate agent based on intent\n3. Forward the complete request to selected agent\n4. Return agent's response to user\n\n## Examples\n\n1) Market Data Request\n```\nInput: \"What's the current APT price?\"\nAction: Delegate to analyticsAgent\nReason: Price data request falls under analytics domain\n```\n\n2) DeFi Operation\n```\nInput: \"Stake 100 APT on Amnis\"\nAction: Delegate to defiAgent\nReason: Staking operation on DeFi protocol\n```\n\n3) Technical Query\n```\nInput: \"Explain Move's resource model\"\nAction: Delegate to aptosExpertAgent\nReason: Technical question about Move language\n```\n\n## Final Reminders\n\n- ALWAYS delegate to ONE specialized agent\n- NEVER respond to queries directly\n- NEVER split requests between multiple agents\n- Choose agent based on primary request intent\n- Current timestamp: {{ $now }} "
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.7,
      "position": [
        260,
        80
      ],
      "id": "103bf712-d37d-47d4-b26a-3c5194b541aa",
      "name": "AI Coordinator"
    },
    {
      "parameters": {
        "name": "defiAgent",
        "description": "## defiAgent\nThis tool connects to the DeFi Agent that manages all protocol interactions and transactions on Aptos.\n- Input: Any DeFi protocol operation or transaction request\n- Output: Transaction execution, protocol interaction results, or operational status\n- Example: \"Supply 100 APT as collateral on Joule Finance\"\n\n#### Capabilities\n- Protocol interactions (Joule Finance, Amnis, Thala)\n- Token swaps and liquidity management\n- Lending and borrowing operations\n- Staking and yield farming\n- LP token management\n- Transaction building and submission\n- Gas optimization\n- Protocol status monitoring\n- Error recovery and transaction retry\n- Position management\n\n#### Implementation Details\n- Direct protocol integration via smart contracts\n- Transaction builder and submitter\n- Gas estimation and optimization\n- Error handling and recovery mechanisms\n- Position tracking and management system",
        "workflowId": {
          "__rl": true,
          "value": "f7wcGlGKpEJZQAxa",
          "mode": "list",
          "cachedResultName": "ADAS DeFi Agent"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {},
          "matchingColumns": [],
          "schema": [],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 2,
      "position": [
        300,
        340
      ],
      "id": "fc18176e-2319-4c2b-96ef-8b09e85dc003",
      "name": "DeFi Agent"
    },
    {
      "parameters": {
        "name": "aptosExpertAgent",
        "description": "=\n## aptosExpertAgent\nThis tool connects to the Aptos Expert Agent that provides technical expertise and blockchain analysis.\n- Input: Any technical question or analysis request about Aptos ecosystem\n- Output: Technical explanations, code analysis, and best practices\n- Example: \"How do I implement a secure Move module for staking?\"\n\n#### Capabilities\n- Move language expertise and code analysis\n- Smart contract security auditing\n- Gas estimation and optimization\n- Network status monitoring\n- Transaction analysis and debugging\n- Best practices guidance\n- Technical documentation\n- Performance optimization\n- Resource management\n- Blockchain explorer integration\n\n#### Implementation Details\n- Move code analyzer and validator\n- Security analysis tools\n- Network monitoring system\n- Documentation generator\n- Performance profiling tools ",
        "workflowId": {
          "__rl": true,
          "value": "jHx7EuCEHs4ODUFI",
          "mode": "list",
          "cachedResultName": "ADAS Expert Agent"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {},
          "matchingColumns": [],
          "schema": [],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 2,
      "position": [
        500,
        340
      ],
      "id": "1fff81c2-cf8b-400d-aea9-01b317d68d99",
      "name": "Aptos Expert Agent"
    },
    {
      "parameters": {
        "name": "analyticsAgent",
        "description": "## analyticsAgent\nThis tool connects to the Analytics Agent that provides comprehensive market data and DeFi analytics for the Aptos ecosystem.\n- Input: Any analytics, metrics, prices, or reporting request for Aptos ecosystem\n- Output: Detailed analytics, market data, and visualizations\n- Example: \"What's the current TVL across all Aptos DeFi protocols?\"\n\n#### Capabilities\n- Price tracking and analysis (CoinGecko)\n- Protocol and Chain TVL metrics (DefiLlama)\n- Market trend analysis and sentiment\n- Portfolio analysis and tracking\n- Protocol performance metrics\n- Yield opportunity comparison\n- Risk assessment and monitoring\n- Custom reporting and visualization\n- Historical data analysis\n- Market sentiment indicators\n\n#### Implementation Details\n- Uses CoinGecko API for price data\n- Integrates with DefiLlama for TVL metrics\n- Implements custom analytics algorithms\n- Provides data visualization tools\n- Supports real-time and historical data analysis",
        "workflowId": {
          "__rl": true,
          "value": "dM90OaVxIUZav9KE",
          "mode": "list",
          "cachedResultName": "ADAS Analytics Agent"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {},
          "matchingColumns": [],
          "schema": [],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 2,
      "position": [
        680,
        340
      ],
      "id": "1462786a-4fd6-40df-a11c-7452e31c2090",
      "name": "Analytics Agent"
    }
  ],
  "pinData": {},
  "connections": {
    "OpenAI Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "AI Coordinator",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Window Buffer Memory": {
      "ai_memory": [
        [
          {
            "node": "AI Coordinator",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "Telegram Trigger": {
      "main": [
        [
          {
            "node": "Switch",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch": {
      "main": [
        [
          {
            "node": "Download File",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Set 'Text'",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set 'Text'": {
      "main": [
        [
          {
            "node": "AI Coordinator",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Download File": {
      "main": [
        [
          {
            "node": "Transcribe",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Transcribe": {
      "main": [
        [
          {
            "node": "AI Coordinator",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "AI Coordinator": {
      "main": [
        [
          {
            "node": "Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "DeFi Agent": {
      "ai_tool": [
        [
          {
            "node": "AI Coordinator",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Aptos Expert Agent": {
      "ai_tool": [
        [
          {
            "node": "AI Coordinator",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Analytics Agent": {
      "ai_tool": [
        [
          {
            "node": "AI Coordinator",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": true,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "63fbd7a5-fab5-4bdb-a15a-9c036b38fa2d",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "abf8971dfdbf55555155acdb4227d6ad43878667d46fbdff58c0161258f8c79b"
  },
  "id": "7oOv2FALcSSjmxlS",
  "tags": [
    {
      "createdAt": "2025-02-21T21:50:50.195Z",
      "updatedAt": "2025-02-21T21:50:50.195Z",
      "id": "AR3QfpztJyQecQCI",
      "name": "eliza"
    },
    {
      "createdAt": "2025-03-19T13:48:38.231Z",
      "updatedAt": "2025-03-19T13:48:38.231Z",
      "id": "kWdkClsybCryvtMd",
      "name": "ADAS"
    }
  ]
}